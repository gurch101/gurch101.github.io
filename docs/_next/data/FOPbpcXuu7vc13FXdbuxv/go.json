{"pageProps":{"post":{"id":"go","title":"Go Summary","category":"summary","description":"Golang Summary","type":"notes","date":"Fri Sep 17 2021","contentHtml":"<h2>Hello World</h2>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>Variables</h2>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// type is specified last just like function parameters</span>\n<span class=\"token comment\">// can be defined at package or function level</span>\n<span class=\"token keyword\">var</span> c<span class=\"token punctuation\">,</span> python<span class=\"token punctuation\">,</span> <span class=\"token keyword\">go</span> <span class=\"token builtin\">bool</span>\n\n<span class=\"token comment\">// type is not needed if variable is initialized</span>\n<span class=\"token keyword\">var</span> c<span class=\"token punctuation\">,</span> python<span class=\"token punctuation\">,</span> java <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"no!\"</span>\n\n<span class=\"token comment\">// can use short declarations inside functions</span>\nc<span class=\"token punctuation\">,</span> python<span class=\"token punctuation\">,</span> java <span class=\"token operator\">:=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"no!\"</span>\n\n<span class=\"token keyword\">const</span> line <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, World!\"</span>\n</code></pre></div>\n<h2>Types</h2>\n<p>bool, string, (u)int(8/16/32/64), byte, rune(alias for int32 used for unicode), float32/64, complex64/128</p>\n<h2>Functions</h2>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// When two or more consecutive named function parameters share a type, you can omit the type from all but the last</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">funcName</span><span class=\"token punctuation\">(</span>param1 <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> param2 <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> param1 <span class=\"token operator\">+</span> param2\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// functions can return any number of results</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> y<span class=\"token punctuation\">,</span> x\n<span class=\"token punctuation\">}</span>\n\na<span class=\"token punctuation\">,</span> b <span class=\"token operator\">:=</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span>\n\n</code></pre></div>\n<h3>Iteration</h3>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// could use same syntax to iterate over a string or a map</span>\n<span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> val <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> arr <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h3>Maps</h3>\n<div class=\"remark-highlight\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// iterate over all keys</span>\n<span class=\"token keyword\">for</span> k <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> mymap <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>Visibility</h2>\n<p>names are exported if they begin with a capital letter. Otherwise, names are private.</p>\n<h2>Modules</h2>\n<p>Create a module</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">go mod init gurch101.com/modname\n</code></pre></div>\n<h2>CLI</h2>\n<p>Compile and run go program</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\">go run <span class=\"token operator\">&#x3C;</span>prog.go<span class=\"token operator\">></span>\n</code></pre></div>\n<p>// todo control flow, structs/slices/maps, methods/interfaces, concurrency</p>\n<p>// how does defer close work?</p>\n"}},"__N_SSG":true}