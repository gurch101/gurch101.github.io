{"pageProps":{"post":{"id":"gradle","title":"Gradle","category":"summary","description":"Udemy course notes","type":"notes","date":"Sat May 28 2022","contentHtml":"<p>gradle is an incremental build system. It checks if a task needs to be executed before it executes it.</p>\n<h3>build.gradle</h3>\n<p>Each block in a gradle file is a closure that receives a delegate object which has properties/functions in it</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">// Plugins add new tasks to your project by extending the gradle core. Promote re-use across multiple projects.\nplugins {\n  id &#x26;#39;java&#x26;#39; // lets you build/compile java source code - adds clean, compileJava, testClasses, jar tasks; requires project layout with src/main/java, src/main/resource, src/test/java\n}\n\n// servers that have dependencies from which you can download dependencies\nrepository {\n  mavenCentral()\n}\n\n// 3rd party dependencies that your code needs\ndependencies {\n  // compile is deprecated, use implementation instead\n  implementation &#x26;#39;org.apache.commons:commons-math3:3.6.1&#x26;#39;\n\n  testImplementation &#x26;#39;junit:junit:4.12&#x26;#39;\n}\n\njar {\n  baseName = &#x26;quot;$project-all&#x26;quot;\n  println &#x26;quot;$basename&#x26;quot;\n\n  manifest {\n    attributes &#x26;#39;Main-Class&#x26;#39;: &#x26;#39;com.package.MainClass&#x26;#39;\n  }\n\n  // bundle all dependencies into jar\n  from {\n    project.configurations.runtimeClasspath.collect {File file -&#x26;gt; project.zipTree(file)}\n  }\n}\n\ntask myTask(type: ParentTask) {\n  // has all properties of ParentTask\n  // can access other task properties by using otherTask.propName\n}\n</code></pre></div>\n<h3>Dependency Management</h3>\n<p>run <code>dependencies</code> task to see all dependencies. To exclude transitive dependencies,</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">dependencies {\n  implementation(&#x26;#39;some.package&#x26;#39;) {\n    exclude group &#x26;#39;some.transtive.dep&#x26;#39;, module: &#x26;#39;dep-core&#x26;#39;\n  }\n}</code></pre></div>\n<p>To get a dependency report, add <code>project-report</code> plugin which gives you an <code>htmlDependencyReport</code> task</p>\n<h3>Multi-Project Builds</h3>\n<p>Allows clear isolation between modules which leads to more efficient builds and testing</p>\n<p>Each project/subproject has its own gradle build configuration.</p>\n<p>The root project will have a <code>settings.gradle</code> file</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">rootProject.name = &#x26;#39;myRootProjectName&#x26;#39;\n\ninclude &#x26;#39;subProject1, &#x26;#39;subProject2&#x26;#39;, &#x26;#39;subProject3&#x26;#39;</code></pre></div>\n<p>in <code>build.gradle</code>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">subprojects {\n  apply plugin: &#x26;#39;java&#x26;#39;\n\n  sourceCompatibility = 1.8\n  targetCompatibility = 1.8\n\n  repositories {\n    mavenCentral()\n  }\n}\n\nproject(&#x26;#39;:subProject1&#x26;#39;) {\n  dependencies {\n    // define dependency on another subproject\n    implementation project(&#x26;#39;:subproject2&#x26;#39;)\n  }\n}\n\nproject(&#x26;#39;:subProject2&#x26;#39;) {\n  // gives access to implementation and api dependencies\n  apply plugin: &#x26;#39;java-library&#x26;#39;\n  dependencies {\n\n  }\n}</code></pre></div>\n<h3>TODO</h3>\n<p>use git commit hash as project version</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">    version &#x26;#39;git rev-parse --short HEAD&#x26;#39;.execute().getText().trim()</code></pre></div>\n"}},"__N_SSG":true}