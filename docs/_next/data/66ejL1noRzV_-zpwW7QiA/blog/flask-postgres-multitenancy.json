{"pageProps":{"post":{"id":"flask-postgres-multitenancy","title":"Leveraging Postgresql Schemas for Multitenancy","category":"python flask postgresql","description":"Segregating web application data by company using Flask and Postgresql","type":"blog","date":"Sat Nov 21 2015","contentHtml":"<p>I'm currently working on a Flask web application that'll be used by multiple companies.\nSince data across each company needs to be segregated, I used postgresql schemas\nto make it all work.</p>\n<h3>What's a Schema?</h3>\n<p>A postgresql database has one or more schemas which, in turn, contain one or more postgresql objects (tables, procedures, types, etc). Schemas effectively serve\nas a namespace for objects in a database. When issuing a query, you can either use <code>&#x3C;tablename></code> or <code>&#x3C;schemaname>.&#x3C;tablename></code>.</p>\n<h3>The Schema Search Path</h3>\n<p>When using an unqualified name (ie - <code>&#x3C;tablename></code>), the system looks for\nthe table on the schema search path and issues queries using the first match.</p>\n<p>The current search path can be shown with the following command:</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SHOW</span> search_path<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>By default, this returns:</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\">search_path\n<span class=\"token comment\">--------------</span>\n $<span class=\"token keyword\">user</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">public</span>\n</code></pre></div>\n<p>The first member of the default search path is the current user name, the second\nmember is <code>public</code> which is the schema to which tables are added by default.</p>\n<p>To update the schema, we can update the schema path with the following command:</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> search_path <span class=\"token keyword\">TO</span> companyname<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>Determining the Users Company</h3>\n<p>Leveraging schemas and the schema search path provides an easy way to segregate\nuser data by company. All that remains is coming up with a way to determine the\nusers company on each request. There are several options:</p>\n<ol>\n<li>Make the user enter the company name on login.</li>\n<li>Store the users and the users company information in the 'public' schema</li>\n<li>Use subdomains which contain the company name</li>\n</ol>\n<p>In the example below, we'll use option 2. Next week, I'll write up a post on how\nto use option 3 with Flask.</p>\n<h3>An Example App</h3>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> jsonify<span class=\"token punctuation\">,</span> abort\n<span class=\"token keyword\">from</span> passlib<span class=\"token punctuation\">.</span><span class=\"token builtin\">hash</span> <span class=\"token keyword\">import</span> pbkdf2_sha256\n<span class=\"token keyword\">from</span> psycopg2<span class=\"token punctuation\">.</span>pool <span class=\"token keyword\">import</span> ThreadedConnectionPool\n<span class=\"token keyword\">from</span> psycopg2<span class=\"token punctuation\">.</span>extras <span class=\"token keyword\">import</span> RealDictCursor\n<span class=\"token keyword\">from</span> functools <span class=\"token keyword\">import</span> wraps\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>secret_key <span class=\"token operator\">=</span> <span class=\"token string\">'\\xbc\\xd7S\\x07\\x08\\xe9H\\x91\\xdb\\x8c\\xdc!\\x11\\x0f\\t\\xfe\\x9b \\xb3so\\xd8|]'</span>\n\npool <span class=\"token operator\">=</span> ThreadedConnectionPool<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n\t                      host<span class=\"token operator\">=</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n                              database<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span>\n                              user<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span>\n                              password<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span>\n                              cursor_factory<span class=\"token operator\">=</span>RealDictCursor<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">login_required</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token decorator annotation punctuation\">@wraps</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decorated_function</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> g<span class=\"token punctuation\">.</span>user <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            abort<span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> decorated_function\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>before_request</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    g<span class=\"token punctuation\">.</span>db <span class=\"token operator\">=</span> pool<span class=\"token punctuation\">.</span>getconn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    g<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">'site'</span> <span class=\"token keyword\">in</span> session<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> g<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cur<span class=\"token punctuation\">:</span>\n            cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'SET search_path TO %s'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">[</span><span class=\"token string\">'site'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>teardown_request</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span>exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    db <span class=\"token operator\">=</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> <span class=\"token string\">'db'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> db <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        pool<span class=\"token punctuation\">.</span>putconn<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    username <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'uname'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> g<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cur<span class=\"token punctuation\">:</span>\n        cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>'SELECT <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> app_user<span class=\"token punctuation\">,</span>company \\\n                      WHERE username<span class=\"token operator\">=</span><span class=\"token operator\">%</span>s \\\n                        AND company<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> app_user<span class=\"token punctuation\">.</span>company_id'<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        user <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> user <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> pbkdf2_sha256<span class=\"token punctuation\">.</span>verify<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            session<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span>\n            session<span class=\"token punctuation\">[</span><span class=\"token string\">'site'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">'company_name'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span>msg<span class=\"token operator\">=</span><span class=\"token string\">'login successful'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span>\n        abort<span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/logout'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    session<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span>msg<span class=\"token operator\">=</span><span class=\"token string\">'logout successful'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/data'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@login_required</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> g<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cur<span class=\"token punctuation\">:</span>\n        cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT * FROM company_data'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>cur<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h4>Schema and Test Data</h4>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> company <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    company_name <span class=\"token keyword\">TEXT</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> app_user <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    username <span class=\"token keyword\">TEXT</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    password <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    company_id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">REFERENCES</span> company <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token string\">\"company1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token string\">\"company2\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> company1<span class=\"token punctuation\">.</span>company_data <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    description <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> company2<span class=\"token punctuation\">.</span>company_data <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    description <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> company<span class=\"token punctuation\">(</span>company_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'company1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> company<span class=\"token punctuation\">(</span>company_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'company2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># password is 'foo'</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> app_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> company_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'user_1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$pbkdf2-sha256$29000$5ry31vofg7CWkhJCSClFKA$i01NZ9cAJCAYlXQCY2AXmcmJfe8eD5vZMDOy0h8tH2U'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># password is 'foo'</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> app_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> company_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'user_2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$pbkdf2-sha256$29000$5ry31vofg7CWkhJCSClFKA$i01NZ9cAJCAYlXQCY2AXmcmJfe8eD5vZMDOy0h8tH2U'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> company1<span class=\"token punctuation\">.</span>company_data<span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'company 1 data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> company2<span class=\"token punctuation\">.</span>company_data<span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'company 2 data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3>Verifying Behavior with curl</h3>\n<p>Logging in:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -c - --data <span class=\"token string\">\"uname=user_1&#x26;passwd=foo\"</span> http://localhost:5000/login <span class=\"token operator\">></span> cookie.txt\n</code></pre></div>\n<p>getting data:</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -b cookie.txt http://localhost:5000/data\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"description\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"company 1 data\"</span>,\n      <span class=\"token string\">\"id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n"}},"__N_SSG":true}