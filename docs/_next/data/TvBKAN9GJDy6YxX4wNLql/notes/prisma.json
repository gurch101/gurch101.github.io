{"pageProps":{"post":{"id":"prisma","title":"Prisma","category":"summary","description":"Prisma Summary","type":"notes","date":"Sat Oct 02 2021","contentHtml":"<h1>Prisma</h1>\n<p>Prisma is an type-safe ORM that can query a database in node.js apps with either REST or GraphQL APIs.</p>\n<ol>\n<li>\n<p><code>npm install --save-dev prisma</code> and <code>npm install @prisma/client</code></p>\n</li>\n<li>\n<p><code>npx prisma init</code> to create <code>.env</code> which stores db connection info and <code>prisma/schema.prisma</code> which has the schema.</p>\n</li>\n<li>\n<p>Set the provider in <code>schema.prisma</code> to sqlite/postgresql, etc.</p>\n</li>\n<li>\n<p>Set the <code>DATABASE_URL</code> in <code>.env</code>. (for sqlite, `file:./dev.db)</p>\n</li>\n<li>\n<p>add models into <code>schema.prisma</code></p>\n</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">model User {\n  id    Int     @default(autoincrement()) @id\n  email String  @unique\n  name  String?\n  posts Post[]\n}\n\nmodel Post {\n  id        Int      @default(autoincrement()) @id\n  title     String\n  content   String?\n  published Boolean? @default(false)\n  author    User?    @relation(fields: [authorId], references: [id])\n  authorId  Int?\n  createDate DateTime @default(now())\n}</code></pre></div>\n<ol start=\"6\">\n<li>\n<p>apply migrations by running <code>npx prisma migrate dev --name &#x3C;migrationName></code>.</p>\n</li>\n<li>\n<p>run <code>npx prisma generate</code> to generate the client code off the models in the schema. Re-run every time you update the model.</p>\n</li>\n</ol>\n<h3>Client</h3>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PrismaClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@prisma/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// only create one instance in your application. Each client manages a connection pool of size (cpus * 2) + 1.</span>\n<span class=\"token comment\">// automatically connects lazily on first request</span>\n<span class=\"token keyword\">const</span> prisma <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrismaClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>https://www.prisma.io/docs/concepts/components/prisma-client/working-with-prismaclient/connection-pool</p>\n<h3>Migrations</h3>\n<p>Update schema then run <code>npx prisma migrate dev</code> to create (if needed) and apply migrations. Use this command in development environments.</p>\n<p>To apply migrations in staging or production, run <code>npx prisma migrate deploy</code>.</p>\n<p>To make sure the database is in sync with the prisma schema (for a pre-existing db, for ex), run <code>prisma db pull</code></p>\n<p>To create a migration (based on schema or empty file) without applying it, run <code>npx prisma migrate dev --create-only</code>. This is useful if you need to modify the migration file (to handle use cases not handled by prisma schema files - adding extensions, stored procedures, triggers, views, partial indexes) before applying it. This is also useful if you need to rename fields since a rename is a CREATE + DROP - you should manually modify the migration to <code>ALTER TABLE RENAME</code>.</p>\n<p>To baseline a migration (mark it as applied) for pre-existing databases, run <code>prisma migrate resolve --applied &#x3C;migration name></code>.</p>\n<p>Migrations are applied in the order they are created.</p>\n<p><code>prisma migrate diff</code> can diff two schema sources (file/db) and outputs the difference to a sql script.</p>\n<h3>Seed Database</h3>\n<ol>\n<li>Create <code>prisma/seed.ts</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PrismaClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@prisma/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> prisma <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrismaClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> prisma<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">await</span> prisma<span class=\"token punctuation\">.</span><span class=\"token function\">$disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>Update <code>package.json</code></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"prisma\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"seed\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-node prisma/seed.ts\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Apply with <code>npx prisma db seed</code>, <code>npx prisma migrate dev</code>, or <code>npx prisma migrate reset</code></li>\n</ol>\n<h3>Limitations</h3>\n<ul>\n<li>cascades aren't supported by prisma schema, need to manually maintain in migration files.</li>\n</ul>\n<h3>Nestjs integration</h3>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> INestApplication<span class=\"token punctuation\">,</span> Injectable<span class=\"token punctuation\">,</span> OnModuleInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PrismaClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@prisma/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PrismaService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PrismaClient</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnModuleInit</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">onModuleInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">enableShutdownHooks</span><span class=\"token punctuation\">(</span>app<span class=\"token operator\">:</span> INestApplication<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeExit\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n"}},"__N_SSG":true}